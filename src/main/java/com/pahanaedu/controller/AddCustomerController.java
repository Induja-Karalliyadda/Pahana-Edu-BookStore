package com.pahanaedu.controller;

import com.pahanaedu.dao.UserDAO;
import com.pahanaedu.model.User;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

@WebServlet("/AddCustomerController")
public class AddCustomerController extends HttpServlet {
    private Gson gson = new Gson();
    
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        
        response.setContentType("application/json");
        PrintWriter out = response.getWriter();
        
        try {
            JsonObject requestData = gson.fromJson(request.getReader(), JsonObject.class);
            
            String username = requestData.get("username").getAsString();
            // Customer code will be auto-generated by UserDAO
            String address = requestData.has("address") ? 
                requestData.get("address").getAsString() : "";
            String telephone = requestData.has("telephone") ? 
                requestData.get("telephone").getAsString() : "";
            String email = requestData.has("email") ? 
                requestData.get("email").getAsString() : "";
            
            // Create new customer using User model
            User customer = new User();
            customer.setUsername(username);
            customer.setAddress(address);
            customer.setTelephone(telephone);
            customer.setEmail(email);
            // Set a default password - the registerUser method will generate customer code
            // and use it as password
            customer.setPassword("default123"); // This will be hashed by registerUser
            customer.setRole("user");
            
            UserDAO userDao = new UserDAO();
            boolean success = userDao.registerUser(customer);
            
            if (success) {
                // Get the newly created customer to return with ID and generated customer code
                List<User> users = userDao.searchUsers(username);
                if (!users.isEmpty()) {
                    // Find the most recently added user with this username
                    User newCustomer = users.get(users.size() - 1);
                    
                    JsonObject response1 = new JsonObject();
                    response1.addProperty("id", newCustomer.getId());
                    response1.addProperty("username", newCustomer.getUsername());
                    response1.addProperty("customerCode", newCustomer.getCustomerCode());
                    response1.addProperty("address", newCustomer.getAddress());
                    response1.addProperty("telephone", newCustomer.getTelephone());
                    response1.addProperty("email", newCustomer.getEmail());
                    
                    out.print(response1.toString());
                } else {
                    JsonObject error = new JsonObject();
                    error.addProperty("error", "Customer created but not found");
                    out.print(error.toString());
                }
            } else {
                JsonObject error = new JsonObject();
                error.addProperty("error", "Failed to add customer");
                out.print(error.toString());
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            JsonObject error = new JsonObject();
            error.addProperty("error", e.getMessage());
            out.print(error.toString());
        }
    }
}
